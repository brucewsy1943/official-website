<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.official.dao.ColumnMapper" >
  <resultMap id="BaseResultMap" type="com.official.bean.Column" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="columnName" property="columnname" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="refNo" property="refno" jdbcType="VARCHAR" />
    <result column="linkType" property="linktype" jdbcType="INTEGER" />
    <result column="linkUrl" property="linkurl" jdbcType="VARCHAR" />
    <result column="template" property="template" jdbcType="VARCHAR" />
    <result column="columnPreview" property="columnpreview" jdbcType="VARCHAR" />
    <result column="addContent" property="addcontent" jdbcType="INTEGER" />
    <result column="isHidden" property="ishidden" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_column
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.official.bean.Column" >
    insert into t_column (id, columnName, parent_id, 
      refNo, linkType, linkUrl, 
      template, columnPreview, addContent, 
      isHidden, remark)
    values (#{id,jdbcType=INTEGER}, #{columnname,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{refno,jdbcType=VARCHAR}, #{linktype,jdbcType=INTEGER}, #{linkurl,jdbcType=VARCHAR}, 
      #{template,jdbcType=VARCHAR}, #{columnpreview,jdbcType=VARCHAR}, #{addcontent,jdbcType=INTEGER}, 
      #{ishidden,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.official.bean.Column" >
    update t_column
    set columnName = #{columnname,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      refNo = #{refno,jdbcType=VARCHAR},
      linkType = #{linktype,jdbcType=INTEGER},
      linkUrl = #{linkurl,jdbcType=VARCHAR},
      template = #{template,jdbcType=VARCHAR},
      columnPreview = #{columnpreview,jdbcType=VARCHAR},
      addContent = #{addcontent,jdbcType=INTEGER},
      isHidden = #{ishidden,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" resultType="com.official.bean.dto.ColumnDto" parameterType="java.lang.Integer" >
    select t.id, t.columnName,tc.columnName as parentName,t.parent_id as parentId, t.refNo, t.linkType, t.linkUrl, t.template, t.columnPreview, 
    t.addContent, t.isHidden,t.remark
    from t_column as t LEFT JOIN t_column as tc 
    on t.parent_id=tc.id
    where t.id=#{id}
  </select>
    
  <select id="findSonColumn" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, columnName, parent_id, refNo, linkType, linkUrl, template, columnPreview, 
    addContent, isHidden, remark
    from t_column
    where parent_id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectSonId"   resultType="java.lang.Integer"  parameterType="java.lang.Integer">
   select id  from t_column    where parent_id=#{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectParentId"   resultType="java.lang.Integer"  parameterType="java.lang.Integer">
   select parent_id  from t_column    where id=#{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, columnName, parent_id, refNo, linkType, linkUrl, template, columnPreview, 
    addContent, isHidden, remark
    from t_column
  </select>
  
  <select id="fuzzySearch" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, columnName, parent_id, refNo, linkType, linkUrl, template, columnPreview, 
    addContent, isHidden, remark
    from t_column 
    where columnName like concat(concat('%',#{columnname},'%')) 
  </select>
  
  
  
</mapper>